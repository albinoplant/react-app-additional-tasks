{"ast":null,"code":"import _slicedToArray from \"/home/matti/Desktop/web/react-app/test-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/matti/Desktop/web/react-app/test-app/src/index.js\";\n\n/*jshint esversion: 6 */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nfunction Square(props) {\n  return React.createElement(\"button\", {\n    className: \"square\",\n    onClick: props.onClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, props.value);\n}\n\nclass Board extends React.Component {\n  renderSquare(i) {\n    return React.createElement(Square, {\n      value: this.props.squares[i],\n      onClick: () => this.props.onClick(i),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    });\n  }\n\n  render() {\n    //two loops to draw board\n    let squares = [];\n\n    for (let i = 0; i < 3; i++) {\n      let row = [];\n\n      for (let j = 0; j < 3; j++) {\n        row.push(this.renderSquare(i * 3 + j));\n      }\n\n      squares.push(React.createElement(\"div\", {\n        key: i,\n        className: \"board-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, row));\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, squares);\n  }\n\n}\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: [{\n        squares: Array(9).fill(null)\n      }],\n      stepNumber: 0,\n      xIsNext: true,\n      isDescending: true\n    };\n  }\n\n  handleClick(i) {\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\n    const current = history[history.length - 1];\n    const squares = current.squares.slice();\n\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n\n    squares[i] = this.state.xIsNext ? 'X' : 'O';\n    this.setState({\n      history: history.concat([{\n        squares: squares,\n        selected: i\n      }]),\n      stepNumber: history.length,\n      xIsNext: !this.state.xIsNext\n    });\n  }\n\n  jumpTo(step) {\n    this.setState({\n      stepNumber: step,\n      xIsNext: step % 2 === 0\n    });\n  }\n\n  sortHistory() {\n    this.setState({\n      isDescending: !this.state.isDescending\n    });\n  }\n\n  render() {\n    const history = this.state.history;\n    const current = history[this.state.stepNumber];\n    const winner = calculateWinner(current.squares);\n    const moves = history.map((step, move) => {\n      console.log(\"stepNumber \" + this.state.stepNumber);\n      console.log(\"move \" + move);\n      const selected = step.selected;\n      const desc = move ? 'Go to move #' + move + getPosition(selected) : 'Go to game start';\n      return React.createElement(\"li\", {\n        key: move,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: move === this.state.stepNumber ? 'list-item-selected' : '',\n        onClick: () => this.jumpTo(move),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, desc));\n    });\n    let status;\n\n    if (winner) {\n      status = 'Winner: ' + winner;\n    } else {\n      status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n    }\n\n    return React.createElement(\"div\", {\n      className: \"game\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"game-board\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(Board, {\n      squares: current.squares,\n      onClick: i => this.handleClick(i),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: () => this.sortHistory(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, \"click\")), React.createElement(\"div\", {\n      className: \"game-info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, status), React.createElement(\"ol\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, this.isDescending ? moves : moves.reverse()\n    /*here switch moves array order*/\n    )));\n  }\n\n} //function with (col,row) positions\n\n\nconst getPosition = move => {\n  const positionMap = {\n    0: ' (1, 1)',\n    1: ' (1, 2)',\n    2: ' (1, 3)',\n    3: ' (2, 1)',\n    4: ' (2, 2)',\n    5: ' (2, 3)',\n    6: ' (3, 1)',\n    7: ' (3, 2)',\n    8: ' (3, 3)'\n  };\n  return positionMap[move];\n};\n\nfunction calculateWinner(squares) {\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n  for (let i = 0; i < lines.length; i++) {\n    const _lines$i = _slicedToArray(lines[i], 3),\n          a = _lines$i[0],\n          b = _lines$i[1],\n          c = _lines$i[2];\n\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n\n  return null;\n} // ========================================\n\n\nReactDOM.render(React.createElement(Game, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 170\n  },\n  __self: this\n}), document.getElementById('root'));","map":{"version":3,"sources":["/home/matti/Desktop/web/react-app/test-app/src/index.js"],"names":["React","ReactDOM","Square","props","onClick","value","Board","Component","renderSquare","i","squares","render","row","j","push","Game","constructor","state","history","Array","fill","stepNumber","xIsNext","isDescending","handleClick","slice","current","length","calculateWinner","setState","concat","selected","jumpTo","step","sortHistory","winner","moves","map","move","console","log","desc","getPosition","status","reverse","positionMap","lines","a","b","c","document","getElementById"],"mappings":"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","sourcesContent":["/*jshint esversion: 6 */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nfunction Square(props) {\n    return (\n      <button\n        className=\"square\"\n        onClick={props.onClick}>\n        {props.value}\n      </button>\n    );\n  }\n\n\nclass Board extends React.Component {\n  renderSquare(i) {\n    return (\n      <Square\n        value={this.props.squares[i]}\n        onClick={() => this.props.onClick(i)}\n      />\n    );\n  }\n  render() {\n    //two loops to draw board\n    let squares = [];\n    for(let i = 0; i < 3; i++) {\n      let row = [];\n      for(let j = 0; j < 3; j++) {\n        row.push(this.renderSquare(i * 3 + j));\n      }\n      squares.push(<div key={i} className=\"board-row\">{row}</div>);\n    }\n\n    return (\n      <div>{squares}</div>\n    );\n  }\n}\n\n\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: [{\n        squares: Array(9).fill(null),\n      }],\n      stepNumber: 0,\n      xIsNext: true,\n      isDescending: true,\n    };\n  }\n  handleClick(i) {\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\n    const current = history[history.length - 1];\n    const squares = current.squares.slice();\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n    squares[i] = this.state.xIsNext ? 'X' : 'O';\n    this.setState({\n      history : history.concat([{\n      squares : squares,\n      selected : i,\n      }]),\n      stepNumber: history.length,\n      xIsNext: !this.state.xIsNext,\n    });\n  }\n  jumpTo(step)  {\n    this.setState({\n      stepNumber: step,\n      xIsNext: (step % 2) ===0,\n    })\n  }\n  sortHistory() {\n    this.setState({\n      isDescending:!this.state.isDescending,\n    });\n  }\n\n  render() {\n    const history = this.state.history;\n    const current = history[this.state.stepNumber];\n    const winner = calculateWinner(current.squares);\n\n    const moves = history.map((step, move) => {\n    console.log(\"stepNumber \"+this.state.stepNumber);\n    console.log(\"move \"+move);\n\n    const selected = step.selected;\n    const desc = move ?\n      'Go to move #' + move + getPosition(selected):\n      'Go to game start';\n    return (\n        <li  key={move}>\n                            {/*bold class if move === stepNumber*/}\n          <button className={move===this.state.stepNumber ? 'list-item-selected' : ''}\n          onClick={() => this.jumpTo(move)}>{desc}</button>\n        </li>\n      );\n    });\n\n    let status;\n    if (winner) {\n      status = 'Winner: ' + winner;\n    } else {\n      status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n    }\n    return (\n      <div className=\"game\">\n        <div className=\"game-board\">\n          <Board\n            squares ={current.squares}\n            onClick={(i) => this.handleClick(i)}\n          />\n          <button onClick={() => this.sortHistory()}>click</button>\n        </div>\n        <div className=\"game-info\">\n          <div>{status}</div>\n          <ol>{this.isDescending ? moves : moves.reverse()/*here switch moves array order*/}</ol>\n        </div>\n      </div>\n    );\n  }\n}\n\n//function with (col,row) positions\nconst getPosition = (move) => {\n  const positionMap = {\n    0: ' (1, 1)',\n    1: ' (1, 2)',\n    2: ' (1, 3)',\n    3: ' (2, 1)',\n    4: ' (2, 2)',\n    5: ' (2, 3)',\n    6: ' (3, 1)',\n    7: ' (3, 2)',\n    8: ' (3, 3)',\n  };\n  return positionMap[move];\n};\n\nfunction calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n}\n// ========================================\n\nReactDOM.render(\n  <Game />,\n  document.getElementById('root')\n);\n"]},"metadata":{},"sourceType":"module"}