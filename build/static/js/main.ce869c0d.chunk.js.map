{"version":3,"sources":["index.js"],"names":["Square","props","className","highlight","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","onClick","value","Board","i","_this","this","winLine","key","squares","includes","row","j","push","renderSquare","React","Component","Game","_this2","Object","_home_matti_Desktop_web_github_react_app_additional_tasks_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","_home_matti_Desktop_web_github_react_app_additional_tasks_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","_home_matti_Desktop_web_github_react_app_additional_tasks_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","call","state","history","Array","fill","stepNumber","xIsNext","isDescending","slice","length","calculateWinner","winner","setState","concat","selected","step","status","_this3","current","winInfo","moves","map","move","desc","getPosition","jumpTo","handleClick","line","reverse","sortHistory","0","1","2","3","4","5","6","7","8","lines","_lines$i","_home_matti_Desktop_web_github_react_app_additional_tasks_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","b","c","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ce869c0d.chunk.js","sourcesContent":["/*jshint esversion: 6 */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nfunction Square(props) {\n  const className = 'square' + (props.highlight ? ' highlight' : '');\n  return (\n    <button\n      className = {className}\n      onClick = {props.onClick}\n    >\n      {props.value}\n    </button>\n  );\n}\n\n\nclass Board extends React.Component {\n    renderSquare(i) {\n      const winLine = this.props.winLine;\n      return (\n        <Square\n          key = {i}\n          value = {this.props.squares[i]}\n          onClick = {() => this.props.onClick(i)}\n          highlight = {winLine && winLine.includes(i)}\n        />\n      );\n    }\n    render() {\n      //two loops to draw board\n      let squares = [];\n      for (let i = 0; i < 3; i++) {\n        let row = [];\n        for (let j = 0; j < 3; j++) {\n          row.push(this.renderSquare(i * 3 + j));\n        }\n        squares.push(\n          <div\n            key = {i}\n            className = \"board-row\" > {row}\n          </div>);\n        }\n\n        return (\n          <div> {squares} </div>\n        );\n      }\n    }\n\n\n\n    class Game extends React.Component {\n      constructor(props) {\n        super(props);\n        this.state = {\n          history: [{\n            squares: Array(9).fill(null),\n          }],\n          stepNumber: 0,\n          xIsNext: true,\n          isDescending: true,\n        };\n      }\n      handleClick(i) {\n        const history = this.state.history.slice(0, this.state.stepNumber + 1);\n        const current = history[history.length - 1];\n        const squares = current.squares.slice();\n        //to get the wanted value  *V*\n        if (calculateWinner(squares).winner || squares[i]) {\n          return;\n        }\n        squares[i] = this.state.xIsNext ? 'X' : 'O';\n        this.setState({\n          history: history.concat([{\n            squares: squares,\n            selected: i,\n          }]),\n          stepNumber: history.length,\n          xIsNext: !this.state.xIsNext,\n        });\n      }\n\n      jumpTo(step) {\n        this.setState({\n          stepNumber: step,\n          xIsNext: (step % 2) === 0,\n        })\n      }\n      sortHistory() {\n        this.setState({\n          isDescending: !this.state.isDescending,\n        });\n      }\n\n      render() {\n        const history = this.state.history;\n        const current = history[this.state.stepNumber];\n        //console.log(this.state.stepNumber);\n        const winInfo = calculateWinner(current.squares);\n        const winner = winInfo.winner;\n        const click = () => {\n          if (this.state.isDescending) {\n            return \"list v\";\n          } else {\n            return \"list ^\";\n          }\n        }\n\n        const moves = history.map((step, move) => {\n          const selected = step.selected;\n          const desc = move ?\n            'Go to move #' + move + getPosition(selected) :\n            'Go to game start';\n          return (\n            <li key = {move}>\n              { /*bold class if move === stepNumber*/ }\n              <button\n                className = {move === this.state.stepNumber ? 'list-item-selected' : ''}\n                onClick = { () => this.jumpTo(move)} > {desc}\n              < /button>\n            </li>\n          );\n        });\n\n        let status;\n        if (winner) {\n          status = 'Winner: ' + winner;\n          //6/6 task - message if no one wins\n        } else if( !winner && (this.state.stepNumber === 9 )){\n          status = 'Draw'\n        } else {\n          status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n        }\n        return (\n          <div className = \"game\" >\n            <div className = \"game-board\" >\n              <Board\n                squares = {current.squares}\n                onClick = {(i) => this.handleClick(i)}\n                winLine = {winInfo.line}\n              />\n            </div>\n            <div className = \"game-info\" >\n              <div >\n                {status}\n              </div>\n            <ol> {this.state.isDescending ? moves : moves.reverse() /*here switch moves array order*/}\n            </ol>\n            <button onClick = { () => this.sortHistory() }> { click() } </button>\n          </div>\n        </div>\n      );\n      }\n    }\n\n    //function with (col,row) positions\n    const getPosition = (move) => {\n      const positionMap = {\n        0: ' (1, 1)',\n        1: ' (1, 2)',\n        2: ' (1, 3)',\n        3: ' (2, 1)',\n        4: ' (2, 2)',\n        5: ' (2, 3)',\n        6: ' (3, 1)',\n        7: ' (3, 2)',\n        8: ' (3, 3)',\n      };\n      return positionMap[move];\n      };\n\n\n    function calculateWinner(squares) {\n      const lines = [\n        [0, 1, 2],\n        [3, 4, 5],\n        [6, 7, 8],\n        [0, 3, 6],\n        [1, 4, 7],\n        [2, 5, 8],\n        [0, 4, 8],\n        [2, 4, 6],\n      ];\n      for (let i = 0; i < lines.length; i++) {\n        const [a, b, c] = lines[i];\n        if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n          return {\n            winner: squares[a],\n            line: lines[i],\n          }\n        }\n      }\n      return {\n        winner: null,\n      }\n    }\n    // ========================================\n\n    ReactDOM.render( <\n      Game / > ,\n      document.getElementById('root')\n    );\n"],"sourceRoot":""}